{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Table } from \"./components/Table\";\nimport Modal from 'react-modal';\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [inputItem, setInputItem] = useState('');\n  const [suggestion, setSuggestion] = useState('');\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/items', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      setItems(data.items);\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n    }\n  };\n  const handleInputChange = event => {\n    setInputItem(event.target.value);\n  };\n  const handleInsertItem = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/insert', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          item: inputItem\n        })\n      });\n      const data = await response.json();\n      console.log(data); // Log the response data\n      setInputItem('');\n      fetchData(); // Fetch updated data after insertion\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleGenerateSuggestion = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/suggestions', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      setSuggestion(data.suggestion);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleUpdateItem = async item => {\n    try {\n      const response = await fetch('http://localhost:5000/delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          item\n        })\n      });\n      const data = await response.json();\n      console.log(data); // Log the response data\n      fetchData(); // Fetch updated data after deletion\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n}\n_s(App, \"tekNhO1k0GhelZEfBFUyCX1px6Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","Modal","App","_s","items","setItems","loading","setLoading","inputItem","setInputItem","suggestion","setSuggestion","modal","setModal","fetchData","response","fetch","method","headers","data","json","error","console","handleInputChange","event","target","value","handleInsertItem","body","JSON","stringify","item","log","handleGenerateSuggestion","handleUpdateItem","toggleModal","_c","$RefreshReg$"],"sources":["/Users/ilyasabdulrahman/Desktop/js2/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Table } from \"./components/Table\";\nimport Modal from 'react-modal';\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [inputItem, setInputItem] = useState('');\n  const [suggestion, setSuggestion] = useState('');\n  const [modal, setModal] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/items', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      setItems(data.items);\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    setInputItem(event.target.value);\n  };\n\n  const handleInsertItem = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/insert', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ item: inputItem }),\n      });\n      const data = await response.json();\n      console.log(data); // Log the response data\n      setInputItem('');\n      fetchData(); // Fetch updated data after insertion\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleGenerateSuggestion = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/suggestions', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      setSuggestion(data.suggestion);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  \n  const handleUpdateItem = async (item) => {\n    try {\n      const response = await fetch('http://localhost:5000/delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ item }),\n      });\n      const data = await response.json();\n      console.log(data); // Log the response data\n      fetchData(); // Fetch updated data after deletion\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const toggleModal = () => {\n    setModal(!modal)\n  }\n  \n\n  \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}